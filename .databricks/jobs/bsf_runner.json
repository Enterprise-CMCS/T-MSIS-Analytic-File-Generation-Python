{
    "name": "TAF Runner - Beneficiary Summary",
    "new_cluster": {
      "spark_version": "9.1.x-scala2.12",
      "spark_conf": {
        "spark.databricks.repl.allowedLanguages": "python,sql",
        "spark.databricks.acl.dfAclsEnabled": "true",
        "spark.databricks.cluster.profile": "serverless",
        "spark.sql.legacy.parquet.datetimeRebaseModeInRead": "LEGACY"
      },
      "aws_attributes": {
        "zone_id": "us-east-1a",
        "first_on_demand": 0,
        "availability": "ON_DEMAND",
        "instance_profile_arn": "arn:aws:iam::810638926762:instance-profile/databricks-val-mstruser-worker-instance-profile",
        "spot_bid_price_percent": 100,
        "ebs_volume_count": 0
      },
      "node_type_id": "i3.2xlarge",
      "driver_node_type_id": "i3.4xlarge",
      "custom_tags": {
        "ResourceClass": "Serverless",
        "stack": "val",
        "layer": "app",
        "business": "AREMAC",
        "business_function": "TMSIS:SAS:TAF_CONV",
        "file_type": "BSF"
      },
      "cluster_log_conf": {
        "s3": {
          "destination": "s3://macbis-dw-logs/databricks/val/cluster-logs/sas-taf-conv/taf-runner-beneficiary-summary",
          "region": "us-east-1",
          "enable_encryption": true,
          "canned_acl": "bucket-owner-full-control"
        }
      },
      "enable_elastic_disk": false,
      "init_scripts": [
        {
          "dbfs": {
            "destination": "dbfs:/databricks/init/custom_spark_conf/uat-val-metastore.sh"
          }
        }
      ],
      "autoscale": {
        "min_workers": 6,
        "max_workers": 40
      }
    },
    "libraries": [
      {
        "whl": "dbfs:/FileStore/shared_uploads/akira/lib/taf-1.0.0-py3-none-any.whl"
      }
    ],
    "email_notifications": {},
    "timeout_seconds": 14400,
    "notebook_task": {
      "notebook_path": "/SAS TAF Conversion/Runners/BSF Runner",
      "base_parameters": {
        "reporting_period": "",
        "state_code": "",
        "run_ID": ""
      }
    },
    "max_concurrent_runs": 1
  }
create temp table BSF_30NOV2021_202111 distkey(msis_ident_num) sortkey(submtg_state_cd, msis_ident_num) as
select
    distinct DA_RUN_ID,
    BSF_FIL_DT,
    BSF_VRSN,
    MSIS_IDENT_NUM,
    SSN_NUM,
    upper(nullif(trim(SSN_IND), '')) AS SSN_IND,
    upper(nullif(trim(SSN_VRFCTN_IND), '')) AS SSN_VRFCTN_IND,
    upper(nullif(trim(MDCR_BENE_ID), '')) AS MDCR_BENE_ID,
    upper(nullif(trim(MDCR_HICN_NUM), '')) AS MDCR_HICN_NUM,
    TMSIS_RUN_ID,
    SUBMTG_STATE_CD,
    REGION AS REG_FLAG,
    upper(nullif(trim(MSIS_CASE_NUM), '')) AS MSIS_CASE_NUM,
    SINGLE_ENR_FLAG AS SNGL_ENRLMT_FLAG,
    MDCD_ENRLMT_EFF_DT_1,
    MDCD_ENRLMT_END_DT_1,
    MDCD_ENRLMT_EFF_DT_2,
    MDCD_ENRLMT_END_DT_2,
    MDCD_ENRLMT_EFF_DT_3,
    MDCD_ENRLMT_END_DT_3,
    MDCD_ENRLMT_EFF_DT_4,
    MDCD_ENRLMT_END_DT_4,
    MDCD_ENRLMT_EFF_DT_5,
    MDCD_ENRLMT_END_DT_5,
    MDCD_ENRLMT_EFF_DT_6,
    MDCD_ENRLMT_END_DT_6,
    MDCD_ENRLMT_EFF_DT_7,
    MDCD_ENRLMT_END_DT_7,
    MDCD_ENRLMT_EFF_DT_8,
    MDCD_ENRLMT_END_DT_8,
    MDCD_ENRLMT_EFF_DT_9,
    MDCD_ENRLMT_END_DT_9,
    MDCD_ENRLMT_EFF_DT_10,
    MDCD_ENRLMT_END_DT_10,
    MDCD_ENRLMT_EFF_DT_11,
    MDCD_ENRLMT_END_DT_11,
    MDCD_ENRLMT_EFF_DT_12,
    MDCD_ENRLMT_END_DT_12,
    MDCD_ENRLMT_EFF_DT_13,
    MDCD_ENRLMT_END_DT_13,
    MDCD_ENRLMT_EFF_DT_14,
    MDCD_ENRLMT_END_DT_14,
    MDCD_ENRLMT_EFF_DT_15,
    MDCD_ENRLMT_END_DT_15,
    MDCD_ENRLMT_EFF_DT_16,
    MDCD_ENRLMT_END_DT_16,
    CHIP_ENRLMT_EFF_DT_1,
    CHIP_ENRLMT_END_DT_1,
    CHIP_ENRLMT_EFF_DT_2,
    CHIP_ENRLMT_END_DT_2,
    CHIP_ENRLMT_EFF_DT_3,
    CHIP_ENRLMT_END_DT_3,
    CHIP_ENRLMT_EFF_DT_4,
    CHIP_ENRLMT_END_DT_4,
    CHIP_ENRLMT_EFF_DT_5,
    CHIP_ENRLMT_END_DT_5,
    CHIP_ENRLMT_EFF_DT_6,
    CHIP_ENRLMT_END_DT_6,
    CHIP_ENRLMT_EFF_DT_7,
    CHIP_ENRLMT_END_DT_7,
    CHIP_ENRLMT_EFF_DT_8,
    CHIP_ENRLMT_END_DT_8,
    CHIP_ENRLMT_EFF_DT_9,
    CHIP_ENRLMT_END_DT_9,
    CHIP_ENRLMT_EFF_DT_10,
    CHIP_ENRLMT_END_DT_10,
    CHIP_ENRLMT_EFF_DT_11,
    CHIP_ENRLMT_END_DT_11,
    CHIP_ENRLMT_EFF_DT_12,
    CHIP_ENRLMT_END_DT_12,
    CHIP_ENRLMT_EFF_DT_13,
    CHIP_ENRLMT_END_DT_13,
    CHIP_ENRLMT_EFF_DT_14,
    CHIP_ENRLMT_END_DT_14,
    CHIP_ENRLMT_EFF_DT_15,
    CHIP_ENRLMT_END_DT_15,
    CHIP_ENRLMT_EFF_DT_16,
    CHIP_ENRLMT_END_DT_16,
    upper(nullif(trim(ELGBL_1ST_NAME), '')) AS ELGBL_1ST_NAME,
    upper(nullif(trim(ELGBL_LAST_NAME), '')) AS ELGBL_LAST_NAME,
    upper(nullif(trim(ELGBL_MDL_INITL_NAME), '')) AS ELGBL_MDL_INITL_NAME,
case
        when date_cmp(BIRTH_DT, '1600-01-01') = -1 then '1599-12-31' :: date
        else BIRTH_DT
    end as BIRTH_DT,
    DEATH_DT,
    AGE AS AGE_NUM,
    AGE_GROUP_FLAG AS AGE_GRP_FLAG,
    DECEASED_FLAG AS DCSD_FLAG,
    upper(nullif(trim(GNDR_CODE), '')) AS GNDR_CD,
    upper(nullif(trim(MRTL_STUS_CD), '')) AS MRTL_STUS_CD,
    upper(nullif(trim(INCM_CD), '')) AS INCM_CD,
    upper(nullif(trim(VET_IND), '')) AS VET_IND,
    upper(nullif(trim(CTZNSHP_IND), '')) AS CTZNSHP_IND,
    upper(nullif(trim(CTZNSHP_VRFCTN_IND), '')) AS CTZNSHP_VRFCTN_IND,
case
        when IMGRTN_STUS_CD = '8' then '0'
        else upper(nullif(trim(IMGRTN_STUS_CD), ''))
    end AS IMGRTN_STUS_CD,
    upper(nullif(trim(IMGRTN_VRFCTN_IND), '')) AS IMGRTN_VRFCTN_IND,
case
        when date_cmp(IMGRTN_STUS_5_YR_BAR_END_DT, '1600-01-01') = -1 then '1599-12-31' :: date
        else IMGRTN_STUS_5_YR_BAR_END_DT
    end as IMGRTN_STUS_5_YR_BAR_END_DT,
    upper(nullif(trim(PRMRY_LANG_CODE), '')) AS OTHR_LANG_HOME_CD,
    PRMRY_LANG_FLAG,
    upper(nullif(trim(PRMRY_LANG_ENGLSH_PRFCNCY_CD), '')) AS PRMRY_LANG_ENGLSH_PRFCNCY_CD,
    upper(nullif(trim(HSEHLD_SIZE_CD), '')) AS HSEHLD_SIZE_CD,
    null AS PRGNT_IND,
    null :: smallint AS PRGNCY_FLAG,
    upper(nullif(trim(CRTFD_AMRCN_INDN_ALSKN_NTV_IND), '')) AS CRTFD_AMRCN_INDN_ALSKN_NTV_IND,
    upper(nullif(trim(ETHNCTY_CD), '')) AS ETHNCTY_CD,
    upper(nullif(trim(ELGBL_LINE_1_ADR_HOME), '')) AS ELGBL_LINE_1_ADR_HOME,
    upper(nullif(trim(ELGBL_LINE_2_ADR_HOME), '')) AS ELGBL_LINE_2_ADR_HOME,
    upper(nullif(trim(ELGBL_LINE_3_ADR_HOME), '')) AS ELGBL_LINE_3_ADR_HOME,
    upper(nullif(trim(ELGBL_CITY_NAME_HOME), '')) AS ELGBL_CITY_NAME_HOME,
    upper(nullif(trim(ELGBL_ZIP_CD_HOME), '')) AS ELGBL_ZIP_CD_HOME,
    upper(nullif(trim(ELGBL_CNTY_CD_HOME), '')) AS ELGBL_CNTY_CD_HOME,
    upper(nullif(trim(ELGBL_STATE_CD_HOME), '')) AS ELGBL_STATE_CD_HOME,
    upper(nullif(trim(ELGBL_PHNE_NUM_HOME), '')) AS ELGBL_PHNE_NUM_HOME,
    upper(nullif(trim(ELGBL_LINE_1_ADR_MAIL), '')) AS ELGBL_LINE_1_ADR_MAIL,
    upper(nullif(trim(ELGBL_LINE_2_ADR_MAIL), '')) AS ELGBL_LINE_2_ADR_MAIL,
    upper(nullif(trim(ELGBL_LINE_3_ADR_MAIL), '')) AS ELGBL_LINE_3_ADR_MAIL,
    upper(nullif(trim(ELGBL_CITY_NAME_MAIL), '')) AS ELGBL_CITY_NAME_MAIL,
    upper(nullif(trim(ELGBL_ZIP_CD_MAIL), '')) AS ELGBL_ZIP_CD_MAIL,
    upper(nullif(trim(ELGBL_CNTY_CD_MAIL), '')) AS ELGBL_CNTY_CD_MAIL,
    upper(nullif(trim(ELGBL_STATE_CD_MAIL), '')) AS ELGBL_STATE_CD_MAIL,
    upper(nullif(trim(CARE_LVL_STUS_CODE), '')) AS CARE_LVL_STUS_CD,
    DEAF_DISAB_FLAG AS DEAF_DSBL_FLAG,
    BLIND_DISAB_FLAG AS BLND_DSBL_FLAG,
    DIFF_CONC_DISAB_FLAG AS DFCLTY_CONC_DSBL_FLAG,
    DIFF_WALKING_DISAB_FLAG AS DFCLTY_WLKG_DSBL_FLAG,
    DIFF_DRESSING_BATHING_DISAB_FLAG AS DFCLTY_DRSNG_BATHG_DSBL_FLAG,
    DIFF_ERRANDS_ALONE_DISAB_FLAG AS DFCLTY_ERRANDS_ALN_DSBL_FLAG,
    OTHER_DISAB_FLAG AS OTHR_DSBL_FLAG,
    HCBS_AGED_NON_HHCC_FLAG,
    HCBS_PHYS_DISAB_NON_HHCC_FLAG AS HCBS_PHYS_DSBL_NON_HHCC_FLAG,
    HCBS_INTEL_DISAB_NON_HHCC_FLAG AS HCBS_INTEL_DSBL_NON_HHCC_FLAG,
    HCBS_AUTISM_SP_DIS_NON_HHCC_FLAG AS HCBS_AUTSM_NON_HHCC_FLAG,
    HCBS_DD_NON_HHCC_FLAG,
    HCBS_MI_SED_NON_HHCC_FLAG,
    HCBS_BRAIN_INJ_NON_HHCC_FLAG AS HCBS_BRN_INJ_NON_HHCC_FLAG,
    HCBS_HIV_AIDS_NON_HHCC_FLAG,
    HCBS_TECH_DEP_MF_NON_HHCC_FLAG,
    HCBS_DISAB_OTHER_NON_HHCC_FLAG AS HCBS_DSBL_OTHR_NON_HHCC_FLAG,
    ENROLLMENT_TYPE_FLAG AS ENRL_TYPE_FLAG,
    DAYS_ELIG_IN_MO_CNT,
    ELIGIBLE_ENTIRE_MONTH_IND AS ELGBL_ENTIR_MO_IND,
    ELIGIBLE_LAST_DAY_OF_MONTH_IND AS ELGBL_LAST_DAY_OF_MO_IND,
    upper(nullif(trim(CHIP_CD), '')) AS CHIP_CD,
    upper(nullif(trim(ELGBLTY_GRP_CD), '')) AS ELGBLTY_GRP_CD,
    upper(nullif(trim(PRMRY_ELGBLTY_GRP_IND), '')) AS PRMRY_ELGBLTY_GRP_IND,
    ELIGIBILITY_GROUP_CATEGORY_FLAG AS ELGBLTY_GRP_CTGRY_FLAG,
    upper(nullif(trim(MAS_CD), '')) AS MAS_CD,
    upper(nullif(trim(ELGBLTY_MDCD_BASIS_CD), '')) AS ELGBLTY_MDCD_BASIS_CD,
    upper(MASBOE) as MASBOE_CD,
    upper(nullif(trim(STATE_SPEC_ELGBLTY_FCTR_TXT), '')) AS STATE_SPEC_ELGBLTY_FCTR_TXT,
    upper(nullif(trim(DUAL_ELGBL_CD), '')) AS DUAL_ELGBL_CD,
    DUAL_ELIGIBLE_FLAG AS DUAL_ELGBL_FLAG,
    upper(nullif(trim(RSTRCTD_BNFTS_CD), '')) AS RSTRCTD_BNFTS_CD,
    upper(nullif(trim(SSDI_IND), '')) AS SSDI_IND,
    upper(nullif(trim(SSI_IND), '')) AS SSI_IND,
    upper(nullif(trim(SSI_STATE_SPLMT_STUS_CD), '')) AS SSI_STATE_SPLMT_STUS_CD,
    upper(nullif(trim(SSI_STUS_CD), '')) AS SSI_STUS_CD,
    upper(nullif(trim(BIRTH_CNCPTN_IND), '')) AS BIRTH_CNCPTN_IND,
    upper(nullif(trim(TANF_CASH_CD), '')) AS TANF_CASH_CD,
    HH_PROGRAM_PARTICIPANT_FLAG AS HH_PGM_PRTCPNT_FLAG,
    upper(nullif(trim(HH_PRVDR_NUM), '')) AS HH_PRVDR_NUM,
    upper(nullif(trim(HH_ENT_NAME), '')) AS HH_ENT_NAME,
    MH_HH_CHRONIC_COND_FLAG AS MH_HH_CHRNC_COND_FLAG,
    SA_HH_CHRONIC_COND_FLAG AS SA_HH_CHRNC_COND_FLAG,
    ASTHMA_HH_CHRONIC_COND_FLAG AS ASTHMA_HH_CHRNC_COND_FLAG,
    DIABETES_HH_CHRONIC_COND_FLAG AS DBTS_HH_CHRNC_COND_FLAG,
    HEART_DIS_HH_CHRONIC_COND_FLAG AS HRT_DIS_HH_CHRNC_COND_FLAG,
    OVERWEIGHT_HH_CHRONIC_COND_FLAG AS OVRWT_HH_CHRNC_COND_FLAG,
    HIV_AIDS_HH_CHRONIC_COND_FLAG AS HIV_AIDS_HH_CHRNC_COND_FLAG,
    OTHER_HH_CHRONIC_COND_FLAG AS OTHR_HH_CHRNC_COND_FLAG,
    upper(nullif(trim(LCKIN_PRVDR_NUM1), '')) AS LCKIN_PRVDR_NUM1,
    upper(nullif(trim(LCKIN_PRVDR_TYPE_CD1), '')) AS LCKIN_PRVDR_TYPE_CD1,
    upper(nullif(trim(LCKIN_PRVDR_NUM2), '')) AS LCKIN_PRVDR_NUM2,
    upper(nullif(trim(LCKIN_PRVDR_TYPE_CD2), '')) AS LCKIN_PRVDR_TYPE_CD2,
    upper(nullif(trim(LCKIN_PRVDR_NUM3), '')) AS LCKIN_PRVDR_NUM3,
    upper(nullif(trim(LCKIN_PRVDR_TYPE_CD3), '')) AS LCKIN_PRVDR_TYPE_CD3,
    LOCK_IN_FLAG AS LCKIN_FLAG,
    upper(nullif(trim(LTSS_PRVDR_NUM1), '')) AS LTSS_PRVDR_NUM1,
    upper(nullif(trim(LTSS_LVL_CARE_CD1), '')) AS LTSS_LVL_CARE_CD1,
    upper(nullif(trim(LTSS_PRVDR_NUM2), '')) AS LTSS_PRVDR_NUM2,
    upper(nullif(trim(LTSS_LVL_CARE_CD2), '')) AS LTSS_LVL_CARE_CD2,
    upper(nullif(trim(LTSS_PRVDR_NUM3), '')) AS LTSS_PRVDR_NUM3,
    upper(nullif(trim(LTSS_LVL_CARE_CD3), '')) AS LTSS_LVL_CARE_CD3,
    upper(nullif(trim(MC_PLAN_ID1), '')) AS MC_PLAN_ID1,
    upper(nullif(trim(MC_PLAN_TYPE_CD1), '')) AS MC_PLAN_TYPE_CD1,
    upper(nullif(trim(MC_PLAN_ID2), '')) AS MC_PLAN_ID2,
    upper(nullif(trim(MC_PLAN_TYPE_CD2), '')) AS MC_PLAN_TYPE_CD2,
    upper(nullif(trim(MC_PLAN_ID3), '')) AS MC_PLAN_ID3,
    upper(nullif(trim(MC_PLAN_TYPE_CD3), '')) AS MC_PLAN_TYPE_CD3,
    upper(nullif(trim(MC_PLAN_ID4), '')) AS MC_PLAN_ID4,
    upper(nullif(trim(MC_PLAN_TYPE_CD4), '')) AS MC_PLAN_TYPE_CD4,
    upper(nullif(trim(MC_PLAN_ID5), '')) AS MC_PLAN_ID5,
    upper(nullif(trim(MC_PLAN_TYPE_CD5), '')) AS MC_PLAN_TYPE_CD5,
    upper(nullif(trim(MC_PLAN_ID6), '')) AS MC_PLAN_ID6,
    upper(nullif(trim(MC_PLAN_TYPE_CD6), '')) AS MC_PLAN_TYPE_CD6,
    upper(nullif(trim(MC_PLAN_ID7), '')) AS MC_PLAN_ID7,
    upper(nullif(trim(MC_PLAN_TYPE_CD7), '')) AS MC_PLAN_TYPE_CD7,
    upper(nullif(trim(MC_PLAN_ID8), '')) AS MC_PLAN_ID8,
    upper(nullif(trim(MC_PLAN_TYPE_CD8), '')) AS MC_PLAN_TYPE_CD8,
    upper(nullif(trim(MC_PLAN_ID9), '')) AS MC_PLAN_ID9,
    upper(nullif(trim(MC_PLAN_TYPE_CD9), '')) AS MC_PLAN_TYPE_CD9,
    upper(nullif(trim(MC_PLAN_ID10), '')) AS MC_PLAN_ID10,
    upper(nullif(trim(MC_PLAN_TYPE_CD10), '')) AS MC_PLAN_TYPE_CD10,
    upper(nullif(trim(MC_PLAN_ID11), '')) AS MC_PLAN_ID11,
    upper(nullif(trim(MC_PLAN_TYPE_CD11), '')) AS MC_PLAN_TYPE_CD11,
    upper(nullif(trim(MC_PLAN_ID12), '')) AS MC_PLAN_ID12,
    upper(nullif(trim(MC_PLAN_TYPE_CD12), '')) AS MC_PLAN_TYPE_CD12,
    upper(nullif(trim(MC_PLAN_ID13), '')) AS MC_PLAN_ID13,
    upper(nullif(trim(MC_PLAN_TYPE_CD13), '')) AS MC_PLAN_TYPE_CD13,
    upper(nullif(trim(MC_PLAN_ID14), '')) AS MC_PLAN_ID14,
    upper(nullif(trim(MC_PLAN_TYPE_CD14), '')) AS MC_PLAN_TYPE_CD14,
    upper(nullif(trim(MC_PLAN_ID15), '')) AS MC_PLAN_ID15,
    upper(nullif(trim(MC_PLAN_TYPE_CD15), '')) AS MC_PLAN_TYPE_CD15,
    upper(nullif(trim(MC_PLAN_ID16), '')) AS MC_PLAN_ID16,
    upper(nullif(trim(MC_PLAN_TYPE_CD16), '')) AS MC_PLAN_TYPE_CD16,
    upper(nullif(trim(MFP_LVS_WTH_FMLY_CD), '')) AS MFP_LVS_WTH_FMLY_CD,
    upper(nullif(trim(MFP_QLFYD_INSTN_CODE), '')) AS MFP_QLFYD_INSTN_CD,
    upper(nullif(trim(MFP_QLFYD_RSDNC_CODE), '')) AS MFP_QLFYD_RSDNC_CD,
    upper(nullif(trim(MFP_PRTCPTN_ENDD_RSN_CODE), '')) AS MFP_PRTCPTN_ENDD_RSN_CD,
    upper(nullif(trim(MFP_RINSTLZD_RSN_CODE), '')) AS MFP_RINSTLZD_RSN_CD,
    MFP_PARTICIPANT_FLAG AS MFP_PRTCPNT_FLAG,
    COMMUNITY_FIRST_CHOICE_SPO_FLAG AS CMNTY_1ST_CHS_SPO_FLAG,
    _1915I_SPO_FLAG,
    _1915J_SPO_FLAG,
    _1932A_SPO_FLAG,
    _1915A_SPO_FLAG,
    _1937_ABP_SPO_FLAG,
    _1115A_PARTICIPANT_FLAG AS _1115A_PRTCPNT_FLAG,
    upper(nullif(trim(WVR_ID1), '')) AS WVR_ID1,
    upper(nullif(trim(WVR_TYPE_CD1), '')) AS WVR_TYPE_CD1,
    upper(nullif(trim(WVR_ID2), '')) AS WVR_ID2,
    upper(nullif(trim(WVR_TYPE_CD2), '')) AS WVR_TYPE_CD2,
    upper(nullif(trim(WVR_ID3), '')) AS WVR_ID3,
    upper(nullif(trim(WVR_TYPE_CD3), '')) AS WVR_TYPE_CD3,
    upper(nullif(trim(WVR_ID4), '')) AS WVR_ID4,
    upper(nullif(trim(WVR_TYPE_CD4), '')) AS WVR_TYPE_CD4,
    upper(nullif(trim(WVR_ID5), '')) AS WVR_ID5,
    upper(nullif(trim(WVR_TYPE_CD5), '')) AS WVR_TYPE_CD5,
    upper(nullif(trim(WVR_ID6), '')) AS WVR_ID6,
    upper(nullif(trim(WVR_TYPE_CD6), '')) AS WVR_TYPE_CD6,
    upper(nullif(trim(WVR_ID7), '')) AS WVR_ID7,
    upper(nullif(trim(WVR_TYPE_CD7), '')) AS WVR_TYPE_CD7,
    upper(nullif(trim(WVR_ID8), '')) AS WVR_ID8,
    upper(nullif(trim(WVR_TYPE_CD8), '')) AS WVR_TYPE_CD8,
    upper(nullif(trim(WVR_ID9), '')) AS WVR_ID9,
    upper(nullif(trim(WVR_TYPE_CD9), '')) AS WVR_TYPE_CD9,
    upper(nullif(trim(WVR_ID10), '')) AS WVR_ID10,
    upper(nullif(trim(WVR_TYPE_CD10), '')) AS WVR_TYPE_CD10,
    upper(nullif(trim(TPL_INSRNC_CVRG_IND), '')) AS TPL_INSRNC_CVRG_IND,
    upper(nullif(trim(TPL_OTHR_CVRG_IND), '')) AS TPL_OTHR_CVRG_IND,
    upper(nullif(trim(SECT_1115A_DEMO_IND), '')) AS SECT_1115A_DEMO_IND,
    NATIVE_HI_FLAG as NTV_HI_FLAG,
    GUAM_CHAMORRO_FLAG,
    SAMOAN_FLAG,
    OTHER_PAC_ISLANDER_FLAG as othr_pac_islndr_flag,
    UNK_PAC_ISLANDER_FLAG as unk_pac_islndr_flag,
    ASIAN_INDIAN_FLAG as asn_indn_flag,
    CHINESE_FLAG,
    FILIPINO_FLAG,
    JAPANESE_FLAG,
    KOREAN_FLAG,
    VIETNAMESE_FLAG,
    OTHER_ASIAN_FLAG as othr_asn_flag,
    UNKNOWN_ASIAN_FLAG as unk_asn_flag,
    WHITE_FLAG as wht_flag,
    BLACK_AFRICAN_AMERICAN_FLAG as black_afrcn_amrcn_flag,
    AIAN_FLAG,
    RACE_ETHNICITY_FLAG as RACE_ETHNCTY_FLAG,
    RACE_ETHNCTY_EXP_FLAG,
    HISPANIC_ETHNICITY_FLAG as HSPNC_ETHNCTY_FLAG,
    upper(nullif(trim(ELGBL_ID_ADDTNL), '')) as ELGBL_ID_ADDTNL,
    upper(nullif(trim(ELGBL_ID_ADDTNL_ENT_ID), '')) as ELGBL_ID_ADDTNL_ENT_ID,
    upper(nullif(trim(ELGBL_ID_ADDTNL_RSN_CHG), '')) as ELGBL_ID_ADDTNL_RSN_CHG,
    upper(nullif(trim(ELGBL_ID_MSIS_XWALK), '')) as ELGBL_ID_MSIS_XWALK,
    upper(nullif(trim(ELGBL_ID_MSIS_XWALK_ENT_ID), '')) as ELGBL_ID_MSIS_XWALK_ENT_ID,
    upper(nullif(trim(ELGBL_ID_MSIS_XWALK_RSN_CHG), '')) as ELGBL_ID_MSIS_XWALK_RSN_CHG,
    upper(nullif(trim(ELGBLTY_CHG_RSN_CD), '')) as ELGBLTY_CHG_RSN_CD
from
    BSF_STEP1